name: 'Customer Example Action'
description: 'Deploy infrastructure and insert data into RDS'
inputs:
  aws_access_key_id:
    description: 'AWS Access Key ID'
    required: true
  aws_secret_access_key:
    description: 'AWS Secret Access Key'
    required: true
  aws_region:
    description: 'AWS region'
    required: true
    default: 'ap-southeast-2'
  rds_instance_class:
    description: 'RDS instance class'
    required: true
    default: 'db.t3.micro'
  db_name:
    description: 'Database name'
    required: true
  db_username:
    description: 'Database username'
    required: true
  db_password:
    description: 'Database password'
    required: true
  ec2_ami_id:
    description: 'AMI ID for the EC2 instance'
    required: true
  ec2_instance_type:
    description: 'Instance type for the EC2 instance'
    required: true
    default: 't2.micro'
  ec2_key_name:
    description: 'Name of the SSH key pair'
    required: true
  ssh_user:
    description: 'SSH username'
    required: true
  ssh_private_key:
    description: 'SSH private key'
    required: true

runs:
  using: "composite"
  steps:
    - name: Deploy Infrastructure
      uses: demodso/org-action-infra-wrapper@v1
      with:
        aws_access_key_id: ${{ inputs.aws_access_key_id }}
        aws_secret_access_key: ${{ inputs.aws_secret_access_key }}
        aws_region: ${{ inputs.aws_region }}
        rds_instance_class: ${{ inputs.rds_instance_class }}
        db_name: ${{ inputs.db_name }}
        db_username: ${{ inputs.db_username }}
        db_password: ${{ inputs.db_password }}
        db_instance_name: 'Customer RDS Instance'
        ec2_ami_id: ${{ inputs.ec2_ami_id }}
        ec2_instance_type: ${{ inputs.ec2_instance_type }}
        ec2_key_name: ${{ inputs.ec2_key_name }}
        ec2_instance_name: 'Customer EC2 Instance'
        ssh_user: ${{ inputs.ssh_user }}
        ssh_private_key: ${{ inputs.ssh_private_key }}
      id: infra-deploy

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Ansible
      run: pip install ansible
      shell: bash

    - name: Run custom Ansible playbook
      env:
        DB_NAME: ${{ inputs.db_name }}
        DB_USER: ${{ inputs.db_username }}
        DB_PASSWORD: ${{ inputs.db_password }}
        DB_HOST: ${{ steps.infra-deploy.outputs.rds_endpoint }}
        DB_PORT: ${{ steps.infra-deploy.outputs.rds_port }}
      run: |
        echo "${{ inputs.ssh_private_key }}" > private_key.pem
        chmod 600 private_key.pem
        ansible-playbook -i "${{ steps.infra-deploy.outputs.ec2_instance_public_ip }}," \
          -u ${{ inputs.ssh_user }} \
          --private-key private_key.pem \
          -e "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" \
          ansible/insert_data.yml
        rm private_key.pem
      shell: bash

outputs:
  rds_endpoint:
    description: "The connection endpoint for the RDS instance"
    value: ${{ steps.infra-deploy.outputs.rds_endpoint }}
  rds_port:
    description: "The port the RDS instance is listening on"
    value: ${{ steps.infra-deploy.outputs.rds_port }}
  ec2_instance_id:
    description: "ID of the created EC2 instance"
    value: ${{ steps.infra-deploy.outputs.ec2_instance_id }}
  ec2_instance_public_ip:
    description: "Public IP of the created EC2 instance"
    value: ${{ steps.infra-deploy.outputs.ec2_instance_public_ip }}